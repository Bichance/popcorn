<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.mapper.popcorn.PayItemMapper">

	<!-- CREATE -->

	<insert id="create" parameterType="PayItemDTO">
		
		INSERT INTO pay_item(pay_item_num, pay_item_price, movie_num, pay_num)
<!--    VALUES(12, 9900, 3213, 1) -->
		VALUES(#{pay_item_num}, #{pay_item_price}, #{movie_num}, #{pay_num})
        
        
<!-- 		insert into qna(qna_num, -->
<!-- 		qna_title, qna_content, qna_date, qna_type, qna_pw, qna_grpno, id) -->
<!-- 		values((select nvl(Max(qna_num),0)+1 as qna_num from qna), -->
<!-- 		#{qna_title}, #{qna_content}, sysdate, #{qna_type}, #{qna_pw}, (select -->
<!-- 		nvl(Max(qna_grpno), 0)+1 as qna_grpno from qna), #{id}) -->
	</insert>
	
	<!-- READ -->
	
	<select id="read" parameterType="int" resultType="PayItemDTO">
<!-- 		SELECT pay_item_num, pay_item_price, movie_num, pay_num, r -->
<!-- 		from( -->
<!-- 			SELECT pay_item_num, pay_item_price, movie_num, pay_num, rownum r -->
<!-- 			from( -->
<!-- 				SELECT pay_item_num, pay_item_price, movie_num, pay_num -->
<!-- 				from pay_item -->
<!--         		ORDER by pay_item_num asc -->
<!--         		) -->
<!--         	) -->
			SELECT pay_item_num, pay_item_price, movie_num, pay_num
			FROM pay_item
			WHERE pay_num = #{pay_num}
		<!-- 아마 주문테이블이 먼저 생성되니까 반복문 돌려서 다 가져오려면 pay_num으로 가져오는게 맞다?? -->
		
	</select>
	
	<!-- UPDATE -->
	<!-- 수정이 필요없다. 결제 안할거면 그냥 지워버리면 된다. -->
	
	
	<!-- DELETE -->
	<delete id="delete" parameterType="int">
		DELETE from pay_item
<!-- 		영화를 삭제하려면 pay_item_num 또는 movie_num 으로 삭제하면된다. -->
		WHERE pay_item_num = #{pay_item_num}
		
	</delete>
	<delete id="deleteAll" parameterType="int">
		DELETE from pay_item
<!-- 		다 지우고 싶으면 그냥 주문번호(pay_num)으로 지우면 된다. -->
		WHERE pay_num = #{pay_num}
	</delete>
	
	<!-- LIST -->
	<select id="list" parameterType="Map" resultType="PayItemDTO">
		SELECT pay_item_num, pay_item_price, movie_num, pay_num, r
		from(
			SELECT pay_item_num, pay_item_price, movie_num, pay_num, rownum r
			from(
				SELECT pay_item_num, pay_item_price, movie_num, pay_num
				from pay_item
        		ORDER by pay_item_num asc
        		)
        	)
	</select>
	
</mapper>